<?php

namespace App\Repositories;

use App\Models\Result;
use App\Models\Student;
use App\Repositories\Repository_Interface\ResultRepositoryInterface;
use Illuminate\Pagination\LengthAwarePaginator;

class ResultRepository extends EloquentRepository implements ResultRepositoryInterface
{
    public function getModel()
    {
        return \App\Models\Result::class;
    }

    public function index()
    {
        return parent::getAll();
    }

    public function createResult(array $attribute)
    {
        return parent::create($attribute);
    }

    public function deleteResult($id)
    {
        return parent::delete($id); // TODO: Change the autogenerated stub
    }

    public function updateResult($id, array $attribute)
    {
        return parent::update($id, $attribute);
    }

    public function findStudentByMarkRange($from, $to)
    {
        $students_id = array();
        $students = array();
        $result = Result::select('student_id')->where('mark','>=',$from)->where('mark','<=',$to)->get();

        for ($i = 0; $i < count($result); $i++) {
            array_push($students_id,$result[$i]->student_id);
        }

        $student_id = array_unique($students_id);
        sort($student_id);

        for($i = 0; $i<count($student_id); $i++){
            $student = Student::where('id','=',$student_id[$i])->first();
            array_push($students,$student);
        }

        $student = new LengthAwarePaginator($students,count($students),.50);

        return $student;
    }

    public function massiveUpdateResult($array)
    {

    }
}
