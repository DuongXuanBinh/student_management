<?php

namespace App\Repositories;

use App\Models\Result;
use App\Models\Student;
use App\Repositories\Repository_Interface\ResultRepositoryInterface;
use Illuminate\Http\Request;
use Illuminate\Pagination\LengthAwarePaginator;


class ResultRepository extends EloquentRepository implements ResultRepositoryInterface
{
    public function getModel()
    {
        return \App\Models\Result::class;
    }

    public function index()
    {
        return parent::getAll();
    }

    public function createResult(array $attribute)
    {
        return parent::create($attribute);
    }

    public function deleteResult($id)
    {
        return parent::delete($id); // TODO: Change the autogenerated stub
    }

    public function updateResult($id, array $attribute)
    {
        return parent::update($id, $attribute);
    }

    public function massiveUpdateResult(Request $request)
    {
        $id = $request->id;
        $subject_id = $request->subject_id;
        $student_id = $request->student_id;
        $mark = $request->mark;
//        dd(count($id), $id, $student_id, $student_id, count($student_id));
        for ($i = 0; $i < count($id); $i++) {
            $result = Result::find($id[$i]);
            $result->subject_id = $subject_id[$i];
            $result->student_id = $student_id[$i];
            $result->mark = $mark[$i];
            $result->save();
        };
        for ($j = count($id); $j < count($subject_id); $j++) {
            $result = Result::create([
                'subject_id' => $subject_id[$j],
                'student_id' => $student_id[$j],
                'mark' => $mark[$j]
            ]);
        }


        return true;
    }

    public function deleteStudentResult($id)
    {
        $result = Result::where('student_id', '=', $id);
        if ($result) {
            $result->delete();

            return true;
        }

        return false;
    }

    public function deleteSubjectResult($id)
    {
        $result = Result::where('subject_id', '=', $id);
        if ($result) {
            $result->delete();

            return true;
        }

        return false;
    }

    public function getResultByStudentID($id)
    {
        $result = Result::select('results.*', 'subjects.name')
            ->join('subjects', 'subjects.id', 'results.subject_id')
            ->where('student_id', '=', $id)->get();
        return $result;
    }
}
